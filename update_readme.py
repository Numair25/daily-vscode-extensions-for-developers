import os
import re
from collections import defaultdict

EXT_DIR = "extensions"
README = "README.md"

def parse_extension_file(filepath):
    with open(filepath, encoding="utf-8") as f:
        content = f.read()
    name = re.search(r"\*\*Name:\*\*\s*(.+)", content)
    category = re.search(r"\*\*Category:\*\*\s*(.+)", content)
    link = re.search(r"\*\*Marketplace Link:\*\*\s*\[View Extension\]\((.+?)\)", content)
    ext_id = re.search(r"\*\*ID:\*\*\s*`(.+?)`", content)
    return {
        "name": name.group(1).strip() if name else None,
        "category": category.group(1).strip() if category else "Uncategorized",
        "link": link.group(1).strip() if link else None,
        "id": ext_id.group(1).strip() if ext_id else None,
    }

def collect_extensions():
    extensions = defaultdict(list)
    for fname in os.listdir(EXT_DIR):
        if fname.endswith(".md"):
            ext = parse_extension_file(os.path.join(EXT_DIR, fname))
            if ext["name"]:
                extensions[ext["category"]].append(ext)
    return extensions

def make_category_anchor(category):
    # GitHub markdown anchor format
    return category.lower().replace(" ", "-")

def write_readme(extensions):
    with open(README, "w", encoding="utf-8") as f:
        f.write("# ðŸ§© VSCode Extensions Directory\n\n")
        f.write("## ðŸ“‚ Categories\n\n")
        for cat in sorted(extensions):
            anchor = make_category_anchor(cat)
            f.write(f"- [{cat}](#{anchor})\n")
        f.write("\n---\n\n")
        for cat in sorted(extensions):
            anchor = make_category_anchor(cat)
            f.write(f"## {cat}\n\n")
            f.write("| Name | Marketplace Link | ID |\n")
            f.write("|------|------------------|----|\n")
            for ext in extensions[cat]:
                name = f"**{ext['name']}**"
                link = f"[View Extension]({ext['link']})" if ext['link'] else ""
                ext_id = f"`{ext['id']}`" if ext['id'] else ""
                f.write(f"| {name} | {link} | {ext_id} |\n")
            f.write("\n")
        f.write("---\n\n")
        f.write("_This file is automatically generated. Do not edit manually._\n")

if __name__ == "__main__":
    extensions = collect_extensions()
    write_readme(extensions) 